{"version":3,"sources":["utils/localstorage.js","components/PageHeader.js","components/Error.js","components/InvoiceTable.js","components/Void.js","components/About.js","components/Help.js","components/Auth.js","context/constants.js","context/AppReducer.js","context/GlobalState.js","App.js","serviceWorker.js","index.js"],"names":["localStorage","global","window","get","key","getItem","set","value","removeItem","setItem","remove","Header","Layout","PageHeader","props","currentPath","className","theme","mode","defaultSelectedKeys","Item","to","Error","message","description","type","href","columns","title","dataIndex","render","format","InvoiceTable","state","selectedRowKeys","loading","invoiceData","invoiceMonth","error","voidLoading","start","setState","axios","then","data","console","log","catch","exc","disconnect","onSelectChange","onDateChange","date","dateString","void","create","timeout","post","notification","open","icon","SmileOutlined","style","color","FrownOutlined","this","rowSelection","onChange","hasSelected","length","marginBottom","onClick","disabled","marginLeft","danger","location","reload","autoFocus","placeholder","picker","rowKey","dataSource","pagination","pageSize","React","Component","Content","Footer","Void","hasAuth","padding","assign","shape","size","LoginOutlined","textAlign","About","Help","Auth","search","oauth_expires_at","oauth_token","oauth_token_secret","history","push","tip","DELETE_TRANSACTION","ADD_TRANSACTION","GET_TRANSACTIONS","TRANSACTION_ERROR","action","transactions","payload","filter","transaction","_id","baseUrl","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","res","id","delete","respose","config","headers","Provider","getTransactions","deleteTransaction","addTransaction","App","useLocation","useHistory","pathname","exact","from","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e93d84f.chunk.js","sourcesContent":["const localStorage = global.window.localStorage;\r\n\r\nexport const get = (key) => localStorage.getItem(key);\r\n\r\nexport const set = (key, value) => {\r\n  value === null\r\n    ? localStorage.removeItem(key)\r\n    : localStorage.setItem(key, value);\r\n};\r\n\r\nexport const remove = (key) => localStorage.removeItem(key);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Layout, Menu } from 'antd';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const PageHeader = (props) => {\r\n  const currentPath = props.currentPath;\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Header>\r\n        <div className=\"logo\" />\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n          defaultSelectedKeys={[currentPath]}\r\n        >\r\n          <Menu.Item key=\"/void\">\r\n            <Link to=\"/void\">Void Invoices</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/about\">\r\n            <Link to=\"/about\">About</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/help\">\r\n            <Link to=\"/help\">Help</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      {/* <Content style={{ padding: '0 50px' }}>\r\n        <Breadcrumb style={{ margin: '16px 0' }}>\r\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item>List</Breadcrumb.Item>\r\n          <Breadcrumb.Item>App</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <div className=\"site-layout-content\">Content</div>\r\n      </Content> */}\r\n      {/* <Footer style={{ textAlign: 'center' }}>Created by Leslie A. 2020</Footer> */}\r\n    </Layout>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Alert } from 'antd';\r\n\r\nexport const Error = () => (\r\n  <div>\r\n    <Alert\r\n      message=\"We encountered an error!\"\r\n      description=\"Please click below to reload the main page. It's likely your API key expired or the connection to your organisation was lost.\"\r\n      type=\"error\"\r\n    />\r\n    <a href=\"/\">Back home</a>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport Moment from 'react-moment';\r\nimport { Table, Button, DatePicker, notification } from 'antd';\r\nimport { SmileOutlined, FrownOutlined } from '@ant-design/icons';\r\n\r\nimport { Error } from './Error';\r\nimport { remove } from '../utils/localstorage';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Invoice Number',\r\n    dataIndex: 'InvoiceNumber',\r\n  },\r\n  {\r\n    title: 'Date',\r\n    dataIndex: 'DateString',\r\n    render: (value) => {\r\n      // convert date to human readable format\r\n      return <Moment format=\"LL\">{value}</Moment>;\r\n    },\r\n  },\r\n  {\r\n    title: 'Due Date',\r\n    dataIndex: 'DueDateString',\r\n    render: (value) => {\r\n      // convert date to human readable format\r\n      return <Moment format=\"LL\">{value}</Moment>;\r\n    },\r\n  },\r\n  {\r\n    title: 'Contact',\r\n    dataIndex: ['Contact', 'Name'],\r\n  },\r\n  {\r\n    title: 'Total',\r\n    dataIndex: 'Total',\r\n  },\r\n  {\r\n    title: 'Currency',\r\n    dataIndex: 'CurrencyCode',\r\n  },\r\n];\r\n\r\nclass InvoiceTable extends React.Component {\r\n  state = {\r\n    selectedRowKeys: [],\r\n    loading: false,\r\n    invoiceData: [],\r\n    invoiceMonth: '2020-01',\r\n    error: false,\r\n    voidLoading: false,\r\n  };\r\n\r\n  start = () => {\r\n    this.setState({ loading: true });\r\n    // retrives invoices for the user\r\n    axios\r\n      .get(`/invoices?date=${this.state.invoiceMonth}`)\r\n      .then((data) => {\r\n        console.log(data.data);\r\n        this.setState({ loading: false, invoiceData: data.data });\r\n      })\r\n      .catch((exc) => {\r\n        this.setState({ loading: false, error: true });\r\n        remove('oauth_token_secret');\r\n      });\r\n  };\r\n\r\n  disconnect = () => {\r\n    // removes users information from their cache\r\n    remove('oauth_token');\r\n    remove('oauth_expires_at');\r\n    remove('oauth_token_secret');\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys) => {\r\n    // fires when user selects a row in the table\r\n    this.setState({ selectedRowKeys });\r\n  };\r\n\r\n  onDateChange = (date, dateString) => {\r\n    // saves date dropdown changes to state\r\n    this.setState({ invoiceMonth: dateString });\r\n  };\r\n\r\n  void = () => {\r\n    // Send void api call to server with an array of invoice ids\r\n    this.setState({ voidLoading: true });\r\n    const api = axios.create({\r\n      timeout: 10 * 60 * 1000, // whatever time you want\r\n    });\r\n    // axios({\r\n    //   method: 'post',\r\n    //   url: '/void',\r\n    //   timeout: 1000 * 500, // Wait for 5 seconds\r\n    //   headers: {\r\n    //     'Content-Type': 'application/json',\r\n    //   },\r\n    //   data: {\r\n    //     void: this.state.selectedRowKeys,\r\n    //   },\r\n    // })\r\n    api\r\n      .post('/void', { void: this.state.selectedRowKeys })\r\n      .then((data) => {\r\n        if (data.data === 'Success') {\r\n          this.setState({ voidLoading: false });\r\n          notification.open({\r\n            message: 'Invoices Voided Successfully',\r\n            description: 'All invoices were voided without any issues.',\r\n            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\r\n          });\r\n        } else {\r\n          this.setState({ voidLoading: false });\r\n          notification.open({\r\n            message: 'We encountered a problem',\r\n            description: `Please see the error response for more information: InvoiceID: ${data.data.error}`,\r\n            icon: <FrownOutlined style={{ color: '#FF0000' }} />,\r\n          });\r\n        }\r\n      })\r\n      .catch((exc) => {\r\n        console.log(`hit the exception frontend`);\r\n\r\n        this.setState({ voidLoading: false, error: true });\r\n        remove('oauth_token_secret');\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { loading, voidLoading, selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n    };\r\n    const hasSelected = selectedRowKeys.length > 0;\r\n    return (\r\n      <div>\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={this.start}\r\n            disabled={false}\r\n            loading={loading}\r\n          >\r\n            Retrieve Invoices\r\n          </Button>\r\n          <Button\r\n            style={{ marginLeft: 8 }}\r\n            danger\r\n            type=\"secondary\"\r\n            onClick={() => {\r\n              this.disconnect();\r\n              window.location.reload();\r\n            }}\r\n            disabled={false}\r\n          >\r\n            Disconnect from Xero\r\n          </Button>\r\n          <DatePicker\r\n            autoFocus={true}\r\n            placeholder={'2020-01'}\r\n            style={{ marginLeft: 8 }}\r\n            onChange={this.onDateChange}\r\n            picker=\"month\"\r\n          />\r\n          <span style={{ marginLeft: 8 }}>\r\n            {hasSelected ? `Selected ${selectedRowKeys.length} items` : ''}\r\n          </span>\r\n          {/* Void button only displays when invoices have been selected */}\r\n          {hasSelected ? (\r\n            <Button\r\n              style={{ marginLeft: 8 }}\r\n              danger\r\n              type=\"primary\"\r\n              onClick={this.void}\r\n              loading={voidLoading}\r\n            >\r\n              {`Void ${selectedRowKeys.length} items`}\r\n            </Button>\r\n          ) : null}\r\n        </div>\r\n        {/* When an error occurs, show user error page instead of table */}\r\n        {this.state.error ? (\r\n          <Error />\r\n        ) : (\r\n          <Table\r\n            rowKey=\"InvoiceID\"\r\n            rowSelection={rowSelection}\r\n            columns={columns}\r\n            dataSource={this.state.invoiceData}\r\n            pagination={{ pageSize: 100 }}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InvoiceTable;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Layout, Button } from 'antd';\r\nimport { LoginOutlined } from '@ant-design/icons';\r\n\r\nimport { get } from '../utils/localstorage';\r\nimport InvoiceTable from './InvoiceTable';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nexport const Void = () => {\r\n  const hasAuth = get('oauth_token_secret');\r\n\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Content style={{ padding: '0 50px' }}>\r\n        <div className=\"site-layout-content\">\r\n          {/* If user is not authenticated, show button, otherwise let them know they're authenticated. */}\r\n          {hasAuth === null ? (\r\n            <div>\r\n              <h3>Please click below to connect with your Xero organisation</h3>\r\n\r\n              <span\r\n                onClick={() =>\r\n                  axios\r\n                    .get('/connect')\r\n                    .then((data) => window.location.assign(data.data))\r\n                }\r\n              >\r\n                <Button type=\"primary\" shape=\"round\" size={'large'}>\r\n                  <LoginOutlined />\r\n                  Sign in to Xero\r\n                </Button>\r\n              </span>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <p>Authenticated</p>\r\n              <InvoiceTable />\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>Created by Leslie A. 2020</Footer>\r\n    </Layout>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nexport const About = () => {\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Content style={{ padding: '0 50px' }}>\r\n        <div className=\"site-layout-content\">I am the about page</div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>Created by Leslie A. 2020</Footer>\r\n    </Layout>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nexport const Help = () => {\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Content style={{ padding: '0 50px' }}>\r\n        <div className=\"site-layout-content\">\r\n          <p>I'm the help page</p>\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>Created by Leslie A. 2020</Footer>\r\n    </Layout>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { set } from '../utils/localstorage';\r\nimport { Spin } from 'antd';\r\n\r\nimport axios from 'axios';\r\nimport { Layout } from 'antd';\r\n\r\nconst { Content, Footer } = Layout;\r\n\r\nexport const Auth = (props) => {\r\n  const search = props.search;\r\n  axios.get(`/api/callback${search}`).then((data) => {\r\n    // Save users information to localstorage\r\n    set('oauth_expires_at', data.data.oauth_expires_at);\r\n    set('oauth_token', data.data.oauth_token);\r\n    set('oauth_token_secret', data.data.oauth_token_secret);\r\n    props.history.push('/');\r\n  });\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Content style={{ padding: '0 50px' }}>\r\n        <div className=\"site-layout-content\">\r\n          <Spin tip=\"Authenticating...\"></Spin>\r\n        </div>\r\n      </Content>\r\n      <Footer style={{ textAlign: 'center' }}>Created by Leslie A. 2020</Footer>\r\n    </Layout>\r\n  );\r\n};\r\n","export const DELETE_TRANSACTION = () => 'DELETE_TRANSACTION';\r\nexport const ADD_TRANSACTION = () => 'ADD_TRANSACTION';\r\nexport const GET_TRANSACTIONS = () => 'GET_TRANSACTIONS';\r\nexport const TRANSACTION_ERROR = () => 'TRANSACTION_ERROR';\r\n","import {\r\n  DELETE_TRANSACTION,\r\n  ADD_TRANSACTION,\r\n  GET_TRANSACTIONS,\r\n  TRANSACTION_ERROR,\r\n} from './constants';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_TRANSACTIONS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        transactions: action.payload,\r\n      };\r\n    case DELETE_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction._id !== action.payload\r\n        ),\r\n      };\r\n    case ADD_TRANSACTION:\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload],\r\n      };\r\n    case TRANSACTION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport AppReducer from './AppReducer';\r\nimport {\r\n  DELETE_TRANSACTION,\r\n  ADD_TRANSACTION,\r\n  GET_TRANSACTIONS,\r\n  TRANSACTION_ERROR,\r\n} from './constants';\r\n\r\nconst baseUrl = '/api/v1/transactions';\r\n\r\n// Initial state object\r\n\r\nconst initialState = {\r\n  transactions: [],\r\n  error: null,\r\n  loading: true,\r\n};\r\n\r\n// Create context\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // Actions\r\n  async function getTransactions() {\r\n    try {\r\n      const res = await axios.get(baseUrl);\r\n\r\n      dispatch({\r\n        type: GET_TRANSACTIONS,\r\n        payload: res.data.data,\r\n      });\r\n    } catch (err) {}\r\n  }\r\n\r\n  async function deleteTransaction(id) {\r\n    try {\r\n      await axios.delete(`${baseUrl}/${id}`);\r\n      dispatch({\r\n        type: DELETE_TRANSACTION,\r\n        payload: id,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: TRANSACTION_ERROR,\r\n        payload: err.respose.data.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  async function addTransaction(transaction) {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    try {\r\n      const res = await axios.post(baseUrl, transaction, config);\r\n      dispatch({\r\n        type: ADD_TRANSACTION,\r\n        payload: res.data.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: TRANSACTION_ERROR,\r\n        payload: err.respose.data.error,\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        error: state.error,\r\n        loading: state.loading,\r\n        getTransactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Redirect,\n  useLocation,\n  useHistory,\n} from 'react-router-dom';\nimport './App.css';\nimport { PageHeader } from './components/PageHeader';\nimport { Void } from './components/Void';\nimport { About } from './components/About';\nimport { Help } from './components/Help';\nimport { Auth } from './components/Auth';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  let location = useLocation();\n  let history = useHistory();\n  return (\n    <GlobalProvider>\n      <PageHeader currentPath={location.pathname} />\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/void\" />\n        <Route path=\"/void\">\n          <Void />\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/help\">\n          <Help />\n        </Route>\n        <Route path=\"/callback\">\n          <Auth history={history} search={location.search} />\n        </Route>\n      </Switch>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}